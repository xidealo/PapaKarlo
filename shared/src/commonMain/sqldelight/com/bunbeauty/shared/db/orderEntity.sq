CREATE TABLE IF NOT EXISTS orderEntity (
    uuid TEXT NOT NULL PRIMARY KEY,
    status TEXT NOT NULL,
    isDelivery INTEGER AS Boolean NOT NULL,
    time INTEGER NOT NULL,
    timeZone TEXT NOT NULL,
    code TEXT NOT NULL,
    address TEXT NOT NULL,
    comment TEXT,
    deliveryCost INTEGER AS Int,
    deferredTime INTEGER,
    userUuid TEXT NOT NULL,
    addressStreet TEXT,
    addressHouse TEXT,
    addressFlat TEXT,
    addressEntrance TEXT,
    addressFloor TEXT,
    addressComment TEXT,
    paymentMethod TEXT,
    oldTotalCost INTEGER AS Int,
    newTotalCost INTEGER AS Int  NOT NULL,
    percentDiscount INTEGER AS Int,
    FOREIGN KEY (userUuid) REFERENCES userEntity(uuid) ON DELETE CASCADE
);
CREATE VIEW orderWithProductEntity AS
SELECT orderEntity.*,
    orderProductEntity.uuid AS orderProductUuid,
    orderProductEntity.count AS orderProductCount,
    orderProductEntity.name AS orderProductName,
    orderProductEntity.newPrice AS orderProductNewPrice,
    orderProductEntity.oldPrice AS orderProductOldPrice,
    orderProductEntity.utils AS orderProductUtils,
    orderProductEntity.nutrition AS orderProductNutrition,
    orderProductEntity.description AS orderProductDescription,
    orderProductEntity.comboDescription AS orderProductComboDescription,
    orderProductEntity.photoLink AS orderProductPhotoLink,
    orderProductEntity.barcode AS orderProductBarcode,
    orderProductEntity.newCommonPrice AS orderProductNewCommonPrice,
    orderProductEntity.oldCommonPrice AS orderProductOldCommonPrice,
    orderProductEntity.newTotalCost AS orderProductNewTotalCost,
    orderProductEntity.oldTotalCost AS orderProductOldTotalCost,
    orderProductEntity.orderUuid AS orderUuid,
    orderAdditionEntity.uuid AS orderAdditionEntityUuid,
    orderAdditionEntity.name AS orderAdditionEntityName,
    orderAdditionEntity.priority AS orderAdditionEntityPriority,
    orderAdditionEntity.orderProductUuid AS orderAdditionEntityOrderProductUuid
FROM orderEntity
JOIN orderProductEntity ON orderEntity.uuid = orderProductEntity.orderUuid
LEFT JOIN orderAdditionEntity ON orderProductEntity.uuid = orderAdditionEntity.orderProductUuid;

isnsertOrder:
INSERT OR REPLACE
INTO orderEntity
VALUES ?;

getOrderWithProductListByUserUuid:
SELECT *
FROM orderWithProductEntity
WHERE userUuid = :userUuid;

getOrderListByUserUuid:
SELECT *
FROM orderEntity
WHERE userUuid = :userUuid
ORDER BY time DESC
LIMIT :count;

getOrderWithProductByUuid:
SELECT *
FROM orderWithProductEntity
WHERE uuid = :uuid;

updateOrderStatusByUuid:
UPDATE orderEntity
SET status = :status
WHERE uuid = :uuid;
