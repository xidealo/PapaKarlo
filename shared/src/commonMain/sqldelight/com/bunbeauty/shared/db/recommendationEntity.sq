CREATE TABLE recommendationProductEntity (
    uuid TEXT NOT NULL PRIMARY KEY,
    menuProductUuid TEXT NOT NULL,
    isVisible INTEGER AS Boolean NOT NULL,
    FOREIGN KEY (menuProductUuid) REFERENCES menuProductEntity(uuid) ON DELETE CASCADE
);

CREATE VIEW recommendationProductWithMenuProductEntity AS
SELECT recommendationProductEntity.uuid AS recommendationProductUuid,
    recommendationProductEntity.menuProductUuid,
    recommendationProductEntity.isVisible AS recommendationIsVisible,
    categoryEntity.uuid AS categoryUuid,
    categoryEntity.name AS categoryName,
    categoryEntity.priority,
    menuProductEntity.*
FROM recommendationProductEntity
JOIN menuProductEntity ON menuProductEntity.uuid = recommendationProductEntity.menuProductUuid
JOIN menuProductCategoryReference ON menuProductCategoryReference.menuProductUuidReference = menuProductEntity.uuid
JOIN categoryEntity ON menuProductCategoryReference.categoryUuidReference = categoryEntity.uuid;

insertRecommendationProduct:
INSERT OR REPLACE
INTO recommendationProductEntity
VALUES (?, ?, ?);

getRecommendationProductList:
SELECT *
FROM recommendationProductWithMenuProductEntity;

getRecommendationProductByUuid:
SELECT *
FROM recommendationProductWithMenuProductEntity
WHERE recommendationProductWithMenuProductEntity.recommendationProductUuid = :uuid;

getRecommendationProductByMenuProductUuid:
SELECT *
FROM recommendationProductWithMenuProductEntity
WHERE recommendationProductWithMenuProductEntity.menuProductUuid = :menuProductUuid;

deleteRecommendationProductByUuid:
DELETE FROM recommendationProductEntity
WHERE uuid = :uuid;

deleteAllRecommendationProducts:
DELETE FROM recommendationProductEntity;